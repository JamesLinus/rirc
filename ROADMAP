TODO (in no particular order):
---------------------------
Cleaner separation between the ui (draw.c) and everything else:
	- ccur and navigation between channels are all function of the ui
	- stateful ui related things are functions of the ui, eg:
		- buffer scrollback
		- input bar framing
		- channel bar framing

^C (0x03) as cancel current line/action

/IGNORE [nick]
/UNIGNORE
	can be implemented as a single nicklist per server

/TOPIC [message]
	set/get channel topic

/HELP [type]
	show available commands.
	if [type] is given, show more specific help

/CLEAR
	equivalent to ^L for clearing channel

/NICKS
	print the current nicks to the channel
	^(Also print this implicitly when end of nicks numeric is received)

/NOTICE

CTCP (at a minimum):
	CLIENTINFO, TIME, PING

receive KICK message type

Numerics:
221 +<flags> :(null)
     returned when MODE <current nick> is sent

351 reply from server for /version
     on freenode it sends me 005...

401 no such nick or channel (eg /version <unknown nick>)

402 no such server

403 :no such channel (Getting this from privmsg sometimes)

409 :No origin specified, (eg "/raw PING")

435 cannot change nickname while banned
    (eg unregistered in channel and trying to /nick)

451 :Connection not registered
    (eg sending a join before registering)

461 <CMD>   :Syntax error  ... from "/nick" or "/join"

501:Unknown mode "<flag>"

502 :Can't set/get mode for other users
     (e.g.: /raw MODE <not my nick> <flag>

Channel buffer scrollback. Probably requires rewrite of buffer
drawing logic.

Input tab complete.
	For commands if input[0] == '/'
	For nicks (in order of last spoken in channel?)

Make sure all the thread related code is using thread-safe functions,
and that proper cancellation points are used. Make sure no resources
can be left hanging (eg: sockets left open when a thread is canceled?)

Reconnection routine for non-explicit disconnect. Exponential backoff
for repeated attempts, with some maximum number of tries.

A configuration file and parser

Investigate SIGIO as alternative to server socket polling loop

Parsing 004/005 numeric for server specific configuration

buffer logging

Nickserv stuff

Implement flag handling in send_* commands for finer control
eg:
/topic                                    = TOPIC #this_channel
/topic setting a topic                    = TOPIC #this_channel :setting a topic
/topic -unset                             = TOPIC #this_channel :
/topic -channel #other                    = TOPIC #other_channel
/topic -channel #other setting a topic    = TOPIC #other_channel :setting a topic
/topic -unset #other                      = TOPIC #other_channel :

colorize output by linetype

Update all places where fatal is called, give the failed system call as the argument
to fatal and use __func__ in the macro itself

Tests for all the send_*, recv_* handlers
	- split all the handlers out into mesg.c and move all net unrelated functions into
	  ui.c so they can be mocked in test cases. Ideally the only interface to mesg.c
	  would be send_mesg & recv_mesg
	- ui.c and draw.c would be separate; draw.c is strictly responsible for drawing to stdout,
	  while ui.c is responsible for all stateful user interactions

Cleanup the server polling

Allow for multiple connections passed as cli args

Detect ping timeouts

Reimplement the pasting stuff that was broken


FIXME:
---------------------------
Rewrite check_servers

Closing private channels sometimes results in numeric 403

Some servers place single args in the trailing section, eg: JOIN :channel vs JOIN channel
which forces the handlers to check p->params and p->trailing, however since p->params
is set to NULL in this case, the result is strtok(NULL, " "), so strtok attemps to continue
parsing whatever it last parsed. Instead, a function like strsep should be implemented
which correctly handles NULL input in this case

If in ##channel that requires authentication (ie bumps you to ##channel-unauthorized
or similar), /disconnect, /connect, rirc attempts to join ##channel, can't, and is
bumped to ##channel-unauthorized, but ##channel buffer remains open and not flagged
as parted, ie could potentially send messages to the channel, but won't receive any

when registered, and have a nick, and try to /nick to something taken, the message is:
	thats taken, trying again with <new nick>
when i successfully change my nick it should print to all channels im in on that server
Also, the error prints erroneously, printing the current nick and not the nick I tried
changing to??

use the alternate screen buffer to restore screen when rirc exits

##linux ~ cannot send to channel
-- cannot send to '##linux - cannot send to channel'
:::and on each message
	ERR_ERRONEUSNICKNAME: nick is null

when erroneous nickname on connect (eg too long) goes into infinite loop

channel name case issues. eg: /join #aBc. Replies refer to #abc


MAYBE (Probably never):
---------------------------
For input pastes that exceed some defined limit, offer a third option:
	post to, for example, pastebin, and send the url to channel

Client/daemon mode:
	with -d, --daemon mode, rirc stays open in the background
	when the user closes the client. draw()s are ignored, etc.
	when a client connects to the daemon, send SIGWINCH, open pipes, etc
