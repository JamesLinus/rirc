TODO
---------------------------

Implement a mesg.c test framework before adding new message types, then:
----------------------
	/HELP [type]
		show available commands.
		if [type] is given, show more specific help

	/NICKS
		print the current nicks to the channel
		^(Also print this implicitly when end of nicks numeric is received)
		^(Also print server's ignore list for '/ignore' and '/unignore')

	/IGNORE, /UNIGNORE,
		print the ignore list

	/CHANS
		print currently open channels with status information, and numeric index

	/<#>
		go to channel <#>

	Numerics:
	221 +<flags> :(null)
		 returned when MODE <current nick> is sent

	351 reply from server for /version
		 on freenode it sends me 005...

	409 :No origin specified, (eg "/raw PING")

	435 cannot change nickname while banned
		(eg unregistered in channel and trying to /nick)

	441 <user> <channel> :They're not on that channel
		(eg kick a user not in the channel)

	442 <channel> :You're not on that channel

	451 :Connection not registered
		(eg sending a join before registering)

	461 <CMD>   :Syntax error  ... from "/nick" or "/join"

	470 <chan1> <chan2> :forwarding to another channel

	482 <channel> :You're not the channel operator

	501:Unknown mode "<flag>"

	502 :Can't set/get mode for other users
		 (e.g.: /raw MODE <not my nick> <flag>
----------------------

show something other than the ping time when attempting to reconnect

show disconnected/parted in status bar for channels instead of 0 user count

show scrollback % or x/y lines in the status bar

Keep state of tab complete for successively getting the next nick lexicographically

Make sure all the thread related code is using thread-safe functions,
and that proper cancellation points are used. Make sure no resources
can be left hanging (eg: sockets left open when a thread is canceled?)

Parsing 004/005 numeric for server specific configuration
	-> parse PREFIX=(abc)xyz and use this to fix mode messages that are setting,
	   for example, channel +o when the arg is a username in the channel

buffer logging

Nickserv stuff

colorize output by linetype

Tests for all the send_*, recv_* handlers
	- split all the handlers out into mesg.c and move all net unrelated functions into
	  ui.c so they can be mocked in test cases. Ideally the only interface to mesg.c
	  would be send_mesg & recv_mesg
	- ui.c and draw.c would be separate; draw.c is strictly responsible for drawing to stdout,
	  while ui.c is responsible for all stateful user interactions

Reimplement the pasting stuff that was broken

A way to unset current topic

FIXME:
---------------------------
when disconnected and reconnected, PING/PONG seems to be out of sync?
	client continuously goes into timing out, though connection is still established

I broke the activity colouring stuff:
	join/part/quit sets activity (it shouldnt)
	message and ping dont set activity (they should)

Some servers place single args in the trailing section, eg: JOIN :channel vs JOIN channel
which forces the handlers to check p->params and p->trailing, however since p->params
is set to NULL in this case, the result is strtok(NULL, " "), so strtok attemps to continue
parsing whatever it last parsed. Instead, a function like strsep should be implemented
which correctly handles NULL input in this case
	-> replace stringtok/stringtok_r with getarg

If in ##channel that requires authentication (ie bumps you to ##channel-unauthorized
or similar), /disconnect, /connect, rirc attempts to join ##channel, can't, and is
bumped to ##channel-unauthorized, but ##channel buffer remains open and not flagged
as parted, ie could potentially send messages to the channel, but won't receive any
	- or it returns 403, and cant /join the channel because it's not parted

use the alternate screen buffer to restore screen when rirc exits

##linux ~ cannot send to channel
-- cannot send to '##linux - cannot send to channel'
:::and on each message
	ERR_ERRONEUSNICKNAME: nick is null
